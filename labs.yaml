openapi: 3.0.3
info:
  title: Bars Api
  description: "Cпецификация в формате OpenAPI для набора веб-сервисов"
  version: 1.0.0
servers: 
  - url: "https://localhost:1111/soa-kozlov/bars"
tags:
  - name: Bars
    description: bars.ru
paths:
  /lab-works/{labwork-id}/difficulty/decrease/{steps-count}:
    put:
      tags:
        - Bars
      summary: Reduce the complexity of laboratory work by the specified number of steps
      description: Reduce the complexity of laboratory work by the specified number of steps
      operationId: reduseLabWorkById
      parameters:
        - name: labwork-id
          in: path
          description: Lab work id
          required: true
          schema:
            type: integer
            format: int64
        - name: steps-count
          in: path
          description: Steps count
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LabWork'
        '400':
          description: Bad request
        '404':
          description: Lab work not found
        '405':
          description: Validation exception
        '500':
          description: Internal server error
        '503':
          description: Service Unavailable
          
  /discipline/{discipline-id}/labwork/{labwork-id}/remove:
    delete:
      tags:
        - Bars
      summary: Remove laboratory work from the discipline program
      description: Remove laboratory work from the discipline program
      operationId: removeLabWorkFromProgramById
      parameters:
        - name: labwork-id
          in: path
          description: Lab work id
          required: true
          schema:
            type: integer
            format: int64
        - name: discipline-id
          in: path
          description: Discipline id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LabWork'
        '400':
          description: Invalid ID supplied
        '404':
          description: Lab work not found
        '500':
          description: Internal server error
        '503':
          description: Service Unavailable      
components:
  schemas:
    LabWork:
      required:
        - name
        - coordinates
        - creationDate
        - minimalPoint
        - difficulty
        - author
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 22
          minimum: 1
        name:
          type: string
          minLength: 1
          example: SOA
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-10-16"
        minimalPoint:
          type: integer
          format: int32
          minimum: 1
          example: 100
        personalQualitiesMinimum:
          type: integer
          format: int32
          minimum: 1
          example: 2
        personalQualitiesMaximum:
          type: integer
          format: int32
          minimum: 1
          example: 100
        difficulty:
          $ref: '#/components/schemas/Difficulty'
        author:
          $ref: '#/components/schemas/Person'
      xml:
        name: labWork
        
  
    Coordinates:
      required:
        - x
        - y
      type: object
      properties:
        x:
          type: number
          format: float
          minimum: -446
          exclusiveMinimum: true
          example: 0.1
        y:
          type: number
          format: double
          example: 56.2
      xml:
        name: coordinates
        
    Person:
      required:
        - name
        - birthday
        - location
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: Victor Kozlov
        birthday:
          type: string
          format: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2000-10-23"
        height:
          type: integer
          format: int32
          minimum: 1
          example: 60
        weight:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
          example: 182.5
        location:
           $ref: '#/components/schemas/Location'
      xml:
        name: person
        
    Location:
      required:
        - x
        - y
        - z
        - name
      type: object
      properties:
        x:
          type: integer
          format: int64
          example: 24
        y:
          type: number
          format: double
          example: -10.10
        z:
          type: integer
          format: int64
          example: 215
        name:
          type: string
          maxLength: 310
          example: Toronto
      xml:
        name: location
        
    Difficulty:
      type: string
      enum:
        - VERY_EASY
        - EASY
        - NORMAL
      